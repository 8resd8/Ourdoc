plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springAiVersion', "1.0.0-M5")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // JSON 추가
    implementation group: 'org.json', name: 'json', version: '20240303'

    // AWS S3
    implementation(platform("software.amazon.awssdk:bom:2.27.21"))
    implementation("software.amazon.awssdk:s3")

    // AI
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'

    // jbcrypt (for 비밀번호 해싱)
    implementation 'org.mindrot:jbcrypt:0.4'

    // ZXing (for QR 코드 생성)
    implementation 'com.google.zxing:core:3.5.1'
    implementation 'com.google.zxing:javase:3.5.1'

    // JWT
    implementation("io.jsonwebtoken:jjwt-api:0.11.5") // ✅ JWT API
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")  // ✅ JWT 구현체
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5") // ✅ JWT JSON 처리 (Jackson)

    // Redis
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '3.4.0'

    // 테스트 객체 생성 라이브러리
    testImplementation("com.navercorp.fixturemonkey:fixture-monkey-starter:1.1.8")

    // Openvidu
    implementation group: 'io.openvidu', name: 'openvidu-java-client', version: '2.31.0'

    // OpenCSV
    implementation group: 'com.opencsv', name: 'opencsv', version: '5.9'

    // 검증
    implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.1.1'

}


tasks.named('test') {
    useJUnitPlatform()
}

clean {
    delete file('src/main/generated')
}